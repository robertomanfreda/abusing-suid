#!/usr/bin/env sh

is_exploitable=0
in_use_database="../resources/suids_db-default"
database_updated_location="../resources/suids_db-updated"

make_indexed_DB() {
  #curl --silent https://gtfobins.github.io/ \
  #  | grep "class=\"bin-name\""                       `# grep class of interest`  \
  #  | sed -e 's/^[ \t]*<td><a href=*//'               `# removing opening tags and whitespaces at the start` \
  #  | sed -e 's/class="bin-name">=*//'                `# removing class name` \
  #  | sed -e 's/<\/a><\/td>*//'                       `# removing closing tags` \
  #  | sed -e 's/*[ \t]$//'                            `# removing whitespaces at the end` \
  #  | sed -e 's/^"*/\https:\/\/gtfobins.github.io/'   `# adding url for generating absolute url` \
  #  | sed -e 's/"//' > "$database_updated_location"    # removing double quotes and print on file

  if sh scraper.sh -u "https://gtfobins.github.io" -t "bin-table" -f "$database_updated_location"; then
    in_use_database="$database_updated_location"
  fi
}

make_exploitable_DB() {
  find / -user root -perm -4000 -print 2>/dev/null
}

echo "Populating internal SUIDs Database..."
make_indexed_DB
printf "Using %s\n" "$in_use_database"
indexed_DB=$(cat "$in_use_database")

echo "Populating exploitable binaries Database..."
exploitables_DB=$(make_exploitable_DB)

for indexed_exploit in $indexed_DB; do

  if echo "$exploitables_DB" | grep "$indexed_exploit" > /dev/null; then
    echo "$exploitables_DB" | grep "$indexed_exploit" >> exploits.txt

    if [ $is_exploitable = 0 ]; then
        is_exploitable=1
    fi
  fi

done

if [ $is_exploitable = 0 ]; then
  echo "---------------------------"
  echo "NO exploitable SUIDs found."
  echo "---------------------------"
else
  echo "------------------------------"
  echo "$(< exploits.txt wc -l) binaries with extra bit"
  echo "------------------------------"

  while IFS= read -r exploit; do
    search_exploit=$(echo "$exploit" | grep -Eo "[^\/]+$")
    found_exploit=$(< "$in_use_database" grep "$search_exploit")

    if [ "$found_exploit" != "" ]; then
      _sys_bin="$exploit"
      _url=$(echo "$found_exploit" | awk '{print $1}')
      _bin=$(echo "$found_exploit" | awk '{print $2}')

      echo "$(ls -la "$_sys_bin") $_url $_bin" >> output.txt
    fi

    ls -la "$exploit"
  done < exploits.txt

  echo "------------------------------"
  echo "$(< output.txt wc -l) possible vulnerabilities"
  echo "------------------------------"
  column -t -s' ' output.txt
fi

rm exploits.txt output.txt 2>/dev/null